#! -*- coding=utf-8 -*-
'''
1、字典和集合实现原理就是哈希表，底层就是一个数组
2、根据哈希函数快速定位一个元素，平均查找O(1)，非常快
3、问题是随着不断增加元素，哈希表要重新开辟空间，拷贝之前元素到新数组

解决哈希冲突两种方法，链接法，探查法（开放寻址法），python用的是二次探查
链接法：
元素冲突之后，以链表填充相同key的元素 
开放寻址法：
冲突来了之后，根据某种方式（二次探查）寻找下一个可用的槽
cpython使用二次探查
'''

